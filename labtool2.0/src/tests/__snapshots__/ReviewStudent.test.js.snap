// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReviewStudent /> ReviewStudent Component should render correctly 1`] = `
<Fragment>
  <DocumentTitle
    title="Week 1 - Maarit Mirja Opiskelija"
  />
  <div
    className="ReviewStudent"
  >
    <Connect(BackButton)
      text="Back to student reviews"
      to="/labtool/browsereviews/TKT20010.2018.K.A.1/10011"
    />
    <div
      style={
        Object {
          "textAlign": "center",
          "textAlignVertical": "center",
        }
      }
    >
      <Link
        style={
          Object {
            "textAlign": "center",
          }
        }
        to="/labtool/courses/TKT20010.2018.K.A.1"
      >
        <h2>
           
          Aineopintojen harjoitustyö: Tietorakenteet ja algoritmit (spring, 2018)
        </h2>
      </Link>
      <h3>
         
        Maarit Mirja
         
        Opiskelija
         
        <div
          style={
            Object {
              "display": "inline-block",
              "padding": "0px 0px 0px 25px",
            }
          }
        >
          Tiran labraprojekti
          : 
          <RepoLink
            url="http://github.com/tiraopi1/tiralabra1"
          />
        </div>
        <div
          key="20003"
        >
          <Button
            as="button"
            className="mini ui black button"
            compact={true}
            floated="right"
          >
            game
          </Button>
        </div>
        <div
          key="20002"
        >
          <Button
            as="button"
            className="mini ui yellow button"
            compact={true}
            floated="right"
          >
            HTML
          </Button>
        </div>
        <div
          key="20001"
        >
          <Button
            as="button"
            className="mini ui red button"
            compact={true}
            floated="right"
          >
            Javascript
          </Button>
        </div>
      </h3>
      <h3>
        Week 
        1
      </h3>
      <Grid>
        <GridRow
          columns={2}
        >
          <GridColumn>
            <div
              align="left"
            >
              <h3>
                Points from previous weeks: 
                <Points
                  points={0}
                />
                 
              </h3>
              Week points: 
              <Points
                points={0}
              />
               
              <br />
              Code review points: 
              <Points
                points={0}
              />
            </div>
            <PreviousWeekDetails />
            <h2>
              Review
            </h2>
            <Form
              as="form"
              onSubmit={[Function]}
            >
              <FormGroup
                inline={true}
                unstackable={true}
              >
                <FormField>
                  <label
                    className="showMaxPoints"
                  >
                    Points 0-
                    4
                  </label>
                  <Input
                    name="points"
                    onChange={[Function]}
                    required={true}
                    step="0.01"
                    style={
                      Object {
                        "align": "center",
                        "width": "150px",
                      }
                    }
                    type="number"
                    value={3}
                  />
                </FormField>
              </FormGroup>
              <h4>
                Feedback
              </h4>
              <FormGroup
                inline={true}
                style={
                  Object {
                    "textAlignVertical": "top",
                  }
                }
                unstackable={true}
              >
                <div
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                >
                  <FormMarkdownTextArea
                    name="comment"
                    onChange={[Function]}
                    style={
                      Object {
                        "height": "250px",
                        "width": "500px",
                      }
                    }
                    value="Hienoa työtä!"
                  />
                </div>
              </FormGroup>
              <h4>
                Review notes
              </h4>
              <p>
                <em>
                  Only shown to instructors on this course
                </em>
              </p>
              <FormGroup
                inline={true}
                style={
                  Object {
                    "textAlignVertical": "top",
                  }
                }
                unstackable={true}
              >
                <div
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                >
                  <FormMarkdownTextArea
                    name="instructorNotes"
                    onChange={[Function]}
                    style={
                      Object {
                        "height": "150px",
                        "width": "500px",
                      }
                    }
                  />
                </div>
              </FormGroup>
              <FormField>
                <Button
                  as="button"
                  className="ui center floated green button"
                  type="submit"
                >
                  Save
                </Button>
                <Button
                  as="button"
                  className="ui center floated button"
                  onClick={[Function]}
                  type="button"
                >
                  Save as draft
                </Button>
                <Link
                  to="/labtool/browsereviews/TKT20010.2018.K.A.1/10011"
                  type="Cancel"
                >
                  <Button
                    as="button"
                    className="ui center floated button"
                    onClick={[Function]}
                    type="cancel"
                  >
                    Cancel
                  </Button>
                </Link>
              </FormField>
            </Form>
          </GridColumn>
          <ReviewStudentChecklist
            checklist={
              Object {
                "courseInstanceId": 10011,
                "courseName": "Aineopintojen harjoitustyö: Tietorakenteet ja algoritmit",
                "createdAt": "2018-03-26T00:00:00.000Z",
                "id": 10003,
                "list": Object {
                  "Algoritmit": Array [
                    Object {
                      "id": 2,
                      "name": "Algoritmin runko",
                      "points": 2,
                      "prerequisite": null,
                      "textWhenOff": "Algoritmin runko puuttuu",
                      "textWhenOn": "Algoritmin runko luotu",
                    },
                    Object {
                      "id": 3,
                      "name": "Tietorakenteita luotu",
                      "points": 2,
                      "prerequisite": null,
                      "textWhenOff": "Tietorakenteita ei ole luotu",
                      "textWhenOn": "Tietorakenteita luotu",
                    },
                  ],
                  "Dokumentaatio": Array [
                    Object {
                      "id": 4,
                      "name": "Readme",
                      "points": 1,
                      "prerequisite": null,
                      "textWhenOff": "README puuttuu",
                      "textWhenOn": "README kunnossa",
                    },
                    Object {
                      "id": 5,
                      "name": "Tuntikirjanpito",
                      "points": 1,
                      "prerequisite": null,
                      "textWhenOff": "Tuntikirjanpito puuttuu",
                      "textWhenOn": "Tuntikirjanpito täytetty oikein",
                    },
                  ],
                  "Koodi": Array [
                    Object {
                      "id": 1,
                      "name": "Koodin laatu",
                      "points": 2,
                      "prerequisite": null,
                      "textWhenOff": "Koodin laadussa parantamisen varaa",
                      "textWhenOn": "Koodi tehty laadukkaasti ja sisältää kommentteja",
                    },
                  ],
                  "README": Array [
                    Object {
                      "id": 6,
                      "name": "Readme sisältää linkkejä",
                      "points": 1,
                      "prerequisite": 4,
                      "textWhenOff": "README:sta puuttuu linkit",
                      "textWhenOn": "README:ssa on tarvittavat linkit",
                    },
                  ],
                },
                "master": false,
                "maxPoints": 4,
                "updatedAt": "2018-03-26T00:00:00.000Z",
                "week": 1,
              }
            }
            checklistOutput="Koodin laadussa parantamisen varaa

Algoritmin runko puuttuu

Tietorakenteita ei ole luotu

README puuttuu

Tuntikirjanpito puuttuu

README:sta puuttuu linkit

"
            checklistPoints={NaN}
            checks={Object {}}
            copyChecklistOutput={[Function]}
            isChecked={[Function]}
            kind="week"
            showOutput={true}
            toggleCheckbox={[Function]}
          />
        </GridRow>
      </Grid>
    </div>
  </div>
</Fragment>
`;
