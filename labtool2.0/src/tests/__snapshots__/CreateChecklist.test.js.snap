// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreateChecklist /> component should render correctly 1`] = `
<Fragment>
  <DocumentTitle
    title="Checklists - Aineopintojen harjoitustyö: Tietorakenteet ja algoritmit"
  />
  <div
    className="CreateChecklist"
  >
    <Connect(BackButton)
      cleanup={[Function]}
      preset="modifyCIPage"
    />
    <Header>
      Aineopintojen harjoitustyö: Tietorakenteet ja algoritmit
    </Header>
    <div
      className="editForm"
    >
      <div
        className="topOptions"
      >
        <Dropdown
          additionLabel="Add "
          additionPosition="top"
          closeOnBlur={true}
          closeOnEscape={true}
          deburr={false}
          icon="dropdown"
          id="weekDropdown"
          minCharacters={1}
          noResultsMessage="No results found."
          onChange={[Function]}
          openOnFocus={true}
          options={Array []}
          placeholder="Select Checklist"
          renderLabel={[Function]}
          searchInput="text"
          selectOnBlur={true}
          selectOnNavigation={true}
          selection={true}
          value="week6"
          wrapSelection={true}
        />
        <div
          className="copyForm"
        >
          <Button
            as="button"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Copy checklist
          </Button>
          <Dropdown
            additionLabel="Add "
            additionPosition="top"
            className="weekDropdown"
            closeOnBlur={true}
            closeOnEscape={true}
            deburr={false}
            disabled={false}
            icon="dropdown"
            minCharacters={1}
            noResultsMessage="No results found."
            onChange={[Function]}
            openOnFocus={true}
            options={Array []}
            placeholder="...from another week"
            renderLabel={[Function]}
            searchInput="text"
            selectOnBlur={true}
            selectOnNavigation={true}
            selection={true}
            wrapSelection={true}
          />
           
          <Dropdown
            additionLabel="Add "
            additionPosition="top"
            className="courseDropdown"
            closeOnBlur={true}
            closeOnEscape={true}
            deburr={false}
            disabled={false}
            icon="dropdown"
            minCharacters={1}
            noResultsMessage="No results found."
            onChange={[Function]}
            openOnFocus={true}
            options={
              Array [
                Object {
                  "text": "Ohjelmistotekniikan menetelmät (11.03.2018)",
                  "value": 10012,
                },
              ]
            }
            placeholder="...from another course"
            renderLabel={[Function]}
            searchInput="text"
            selectOnBlur={true}
            selectOnNavigation={true}
            selection={true}
            value={null}
            wrapSelection={true}
          />
        </div>
        <div
          className="jsonButtons"
        >
          <JsonEdit
            downloadName="TKT20010.2018.K.A.1_week6.json"
            generation={2}
            initialData={
              Object {
                "Koodi": Array [
                  Object {
                    "checkedPoints": 2,
                    "name": "Koodin laatu",
                    "textWhenOff": "Koodin laadussa parantamisen varaa",
                    "textWhenOn": "Koodin laatu kiitettävää",
                    "uncheckedPoints": 0,
                  },
                ],
                "Repo": Array [
                  Object {
                    "checkedPoints": 0,
                    "name": "Readme kunnossa",
                    "textWhenOff": "Readmessa feelua",
                    "textWhenOn": "",
                    "uncheckedPoints": -1,
                  },
                ],
              }
            }
            onImport={[Function]}
          />
        </div>
      </div>
      <div>
        <form
          onSubmit={[Function]}
        >
          <Button
            as="button"
            className="saveButton"
            color="green"
            disabled={true}
            size="large"
            type="submit"
          >
            <div
              className="saveButtonText"
            >
              Save
            </div>
          </Button>
          <br />
          <br />
        </form>
        <div>
          <Card
            color="red"
            fluid={true}
            key="Koodi"
            style={null}
          >
            <CardContent>
              <Header
                color="brown"
                size="huge"
              >
                Koodi
                 
                <Button
                  as="button"
                  className="deleteButton"
                  color="red"
                  onClick={[Function]}
                  size="tiny"
                  type="button"
                >
                  <div
                    className="deleteButtonText"
                  >
                    Delete topic
                  </div>
                </Button>
                <Button
                  as="button"
                  circular={true}
                  className="moveButton"
                  color="blue"
                  disabled={false}
                  icon="arrow circle down"
                  onClick={[Function]}
                  type="button"
                />
                <Button
                  as="button"
                  circular={true}
                  className="moveButton"
                  color="blue"
                  disabled={true}
                  icon="arrow circle up"
                  onClick={[Function]}
                  type="button"
                />
              </Header>
              <div>
                <p>
                  Total points for this section:
                   
                  <strong
                    className="bestPointsNumber"
                  >
                    <Points
                      points={2}
                    />
                  </strong>
                  <span />
                </p>
              </div>
              <div
                className="prerequisiteCategory"
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                Set a prerequisite for all checks in this category:
                 
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  className="prerequisiteCategoryDropdown"
                  closeOnBlur={true}
                  closeOnEscape={true}
                  deburr={false}
                  icon="dropdown"
                  minCharacters={1}
                  noResultsMessage="No results found."
                  onChange={[Function]}
                  openOnFocus={true}
                  options={
                    Array [
                      Object {
                        "key": null,
                        "text": "(none)",
                        "value": null,
                      },
                      Object {
                        "key": undefined,
                        "text": "Koodin laatu",
                        "value": undefined,
                      },
                    ]
                  }
                  placeholder="Select prerequisite..."
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  selection={true}
                  wrapSelection={true}
                />
              </div>
            </CardContent>
            <CardContent
              key="Koodin laatu"
            >
              <Header>
                Koodin laatu
                 
                <Button
                  as="button"
                  className="deleteButton"
                  color="red"
                  onClick={[Function]}
                  size="tiny"
                  type="button"
                >
                  <div
                    className="deleteButtonText"
                  >
                    Delete checkbox
                  </div>
                </Button>
                <Button
                  as="button"
                  circular={true}
                  className="moveButtonLarge"
                  color="blue"
                  disabled={true}
                  icon="arrow circle down"
                  onClick={[Function]}
                  type="button"
                />
                <Button
                  as="button"
                  circular={true}
                  className="moveButtonLarge"
                  color="blue"
                  disabled={true}
                  icon="arrow circle up"
                  onClick={[Function]}
                  type="button"
                />
              </Header>
              <div
                className="checkTextRow"
              >
                <div
                  className="checkedLabel"
                >
                  <Label
                    basic={true}
                  >
                    Checked
                  </Label>
                </div>
                <Input
                  className="numberField"
                  label="Points"
                  onBlur={[Function]}
                  onChange={[Function]}
                  step="0.01"
                  type="number"
                  value={2}
                />
                <span
                  style={
                    Object {
                      "flexGrow": 100,
                    }
                  }
                >
                  <Input
                    className="textField"
                    fluid={true}
                    label="Text"
                    onChange={[Function]}
                    type="text"
                    value="Koodin laatu kiitettävää"
                  />
                </span>
              </div>
              <div
                className="checkTextRow"
              >
                <div
                  className="checkedLabel"
                >
                  <Label
                    basic={true}
                  >
                    Unchecked
                  </Label>
                </div>
                <Input
                  className="numberField"
                  label="Points"
                  onBlur={[Function]}
                  onChange={[Function]}
                  step="0.01"
                  type="number"
                  value={0}
                />
                <span
                  style={
                    Object {
                      "flexGrow": 100,
                    }
                  }
                >
                  <Input
                    className="textField"
                    fluid={true}
                    label="Text"
                    onChange={[Function]}
                    type="text"
                    value="Koodin laadussa parantamisen varaa"
                  />
                </span>
              </div>
              <div
                className="minimumRequirement"
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                <Checkbox
                  label="Minimum requirement"
                  onChange={[Function]}
                  type="checkbox"
                />
                , which should be
                 
                <Radio
                  checked={false}
                  disabled={true}
                  label="checked"
                  name="minimumRequirementMetIf_Koodi_undefined"
                  onChange={[Function]}
                  type="radio"
                  value={true}
                />
                 
                <Radio
                  checked={false}
                  disabled={true}
                  label="unchecked"
                  name="minimumRequirementMetIf_Koodi_undefined"
                  onChange={[Function]}
                  type="radio"
                  value={false}
                />
                , or else grade will drop by
                 
                <Input
                  className="minimumRequirementGradePenalty"
                  disabled={true}
                  max="5"
                  min="0"
                  onChange={[Function]}
                  step="1"
                  style={
                    Object {
                      "width": "60px",
                    }
                  }
                  type="number"
                />
              </div>
              <div
                className="prerequisite"
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                <Label>
                  Prerequisite
                </Label>
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  className="prerequisiteDropdown"
                  closeOnBlur={true}
                  closeOnEscape={true}
                  deburr={false}
                  icon="dropdown"
                  minCharacters={1}
                  noResultsMessage="No results found."
                  onChange={[Function]}
                  openOnFocus={true}
                  options={
                    Array [
                      Object {
                        "key": null,
                        "text": "(none)",
                        "value": null,
                      },
                    ]
                  }
                  placeholder="(none)"
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  selection={true}
                  value={null}
                  wrapSelection={true}
                />
                <Popup
                  content="If a prerequisite is set, the prerequisite must be checked in order for this checkbox to be checkable."
                  disabled={false}
                  eventsEnabled={true}
                  offset={0}
                  on={
                    Array [
                      "click",
                      "hover",
                    ]
                  }
                  pinned={false}
                  position="top left"
                  trigger={
                    <Icon
                      as="i"
                      name="help circle"
                    />
                  }
                />
              </div>
            </CardContent>
            <CardContent>
              <form
                className="addForm"
                onSubmit={[Function]}
              >
                <Button
                  as="button"
                  color="yellow"
                  content="Add new checkbox"
                  icon="plus"
                  labelPosition="left"
                  type="submit"
                />
                <div />
              </form>
            </CardContent>
          </Card>
          <Card
            color="red"
            fluid={true}
            key="Repo"
            style={
              Object {
                "backgroundColor": "#F2F2F2",
              }
            }
          >
            <CardContent>
              <Header
                color="brown"
                size="huge"
              >
                Repo
                 
                <Button
                  as="button"
                  className="deleteButton"
                  color="red"
                  onClick={[Function]}
                  size="tiny"
                  type="button"
                >
                  <div
                    className="deleteButtonText"
                  >
                    Delete topic
                  </div>
                </Button>
                <Button
                  as="button"
                  circular={true}
                  className="moveButton"
                  color="blue"
                  disabled={true}
                  icon="arrow circle down"
                  onClick={[Function]}
                  type="button"
                />
                <Button
                  as="button"
                  circular={true}
                  className="moveButton"
                  color="blue"
                  disabled={false}
                  icon="arrow circle up"
                  onClick={[Function]}
                  type="button"
                />
              </Header>
              <div>
                <p>
                  Total points for this section:
                   
                  <strong
                    className="bestPointsNumber"
                  >
                    <Points
                      points={0}
                    />
                  </strong>
                  <span />
                </p>
              </div>
              <div
                className="prerequisiteCategory"
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                Set a prerequisite for all checks in this category:
                 
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  className="prerequisiteCategoryDropdown"
                  closeOnBlur={true}
                  closeOnEscape={true}
                  deburr={false}
                  icon="dropdown"
                  minCharacters={1}
                  noResultsMessage="No results found."
                  onChange={[Function]}
                  openOnFocus={true}
                  options={
                    Array [
                      Object {
                        "key": null,
                        "text": "(none)",
                        "value": null,
                      },
                      Object {
                        "key": undefined,
                        "text": "Readme kunnossa",
                        "value": undefined,
                      },
                    ]
                  }
                  placeholder="Select prerequisite..."
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  selection={true}
                  wrapSelection={true}
                />
              </div>
            </CardContent>
            <CardContent
              key="Readme kunnossa"
            >
              <Header>
                Readme kunnossa
                 
                <Button
                  as="button"
                  className="deleteButton"
                  color="red"
                  onClick={[Function]}
                  size="tiny"
                  type="button"
                >
                  <div
                    className="deleteButtonText"
                  >
                    Delete checkbox
                  </div>
                </Button>
                <Button
                  as="button"
                  circular={true}
                  className="moveButtonLarge"
                  color="blue"
                  disabled={true}
                  icon="arrow circle down"
                  onClick={[Function]}
                  type="button"
                />
                <Button
                  as="button"
                  circular={true}
                  className="moveButtonLarge"
                  color="blue"
                  disabled={true}
                  icon="arrow circle up"
                  onClick={[Function]}
                  type="button"
                />
              </Header>
              <div
                className="checkTextRow"
              >
                <div
                  className="checkedLabel"
                >
                  <Label
                    basic={true}
                  >
                    Checked
                  </Label>
                </div>
                <Input
                  className="numberField"
                  label="Points"
                  onBlur={[Function]}
                  onChange={[Function]}
                  step="0.01"
                  type="number"
                  value={0}
                />
                <span
                  style={
                    Object {
                      "flexGrow": 100,
                    }
                  }
                >
                  <Input
                    className="textField"
                    fluid={true}
                    label="Text"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </span>
              </div>
              <div
                className="checkTextRow"
              >
                <div
                  className="checkedLabel"
                >
                  <Label
                    basic={true}
                  >
                    Unchecked
                  </Label>
                </div>
                <Input
                  className="numberField"
                  label="Points"
                  onBlur={[Function]}
                  onChange={[Function]}
                  step="0.01"
                  type="number"
                  value={-1}
                />
                <span
                  style={
                    Object {
                      "flexGrow": 100,
                    }
                  }
                >
                  <Input
                    className="textField"
                    fluid={true}
                    label="Text"
                    onChange={[Function]}
                    type="text"
                    value="Readmessa feelua"
                  />
                </span>
              </div>
              <div
                className="minimumRequirement"
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                <Checkbox
                  label="Minimum requirement"
                  onChange={[Function]}
                  type="checkbox"
                />
                , which should be
                 
                <Radio
                  checked={false}
                  disabled={true}
                  label="checked"
                  name="minimumRequirementMetIf_Repo_undefined"
                  onChange={[Function]}
                  type="radio"
                  value={true}
                />
                 
                <Radio
                  checked={false}
                  disabled={true}
                  label="unchecked"
                  name="minimumRequirementMetIf_Repo_undefined"
                  onChange={[Function]}
                  type="radio"
                  value={false}
                />
                , or else grade will drop by
                 
                <Input
                  className="minimumRequirementGradePenalty"
                  disabled={true}
                  max="5"
                  min="0"
                  onChange={[Function]}
                  step="1"
                  style={
                    Object {
                      "width": "60px",
                    }
                  }
                  type="number"
                />
              </div>
              <div
                className="prerequisite"
                style={
                  Object {
                    "marginTop": "1em",
                  }
                }
              >
                <Label>
                  Prerequisite
                </Label>
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  className="prerequisiteDropdown"
                  closeOnBlur={true}
                  closeOnEscape={true}
                  deburr={false}
                  icon="dropdown"
                  minCharacters={1}
                  noResultsMessage="No results found."
                  onChange={[Function]}
                  openOnFocus={true}
                  options={
                    Array [
                      Object {
                        "key": null,
                        "text": "(none)",
                        "value": null,
                      },
                    ]
                  }
                  placeholder="(none)"
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  selection={true}
                  value={null}
                  wrapSelection={true}
                />
                <Popup
                  content="If a prerequisite is set, the prerequisite must be checked in order for this checkbox to be checkable."
                  disabled={false}
                  eventsEnabled={true}
                  offset={0}
                  on={
                    Array [
                      "click",
                      "hover",
                    ]
                  }
                  pinned={false}
                  position="top left"
                  trigger={
                    <Icon
                      as="i"
                      name="help circle"
                    />
                  }
                />
              </div>
            </CardContent>
            <CardContent>
              <form
                className="addForm"
                onSubmit={[Function]}
              >
                <Button
                  as="button"
                  color="yellow"
                  content="Add new checkbox"
                  icon="plus"
                  labelPosition="left"
                  type="submit"
                />
                <div />
              </form>
            </CardContent>
          </Card>
          <form
            className="addForm"
            onSubmit={[Function]}
          >
            <Button
              as="button"
              content="Add new topic"
              icon="add"
              labelPosition="left"
              size="large"
              type="submit"
            />
            <div />
          </form>
        </div>
        <Card
          className="maxPointsCard"
        >
          <CardContent>
            <p>
              Total points of the checklist:
               
              <strong
                className="totalPointsOfChecklist"
              >
                <Points
                  points={2}
                />
              </strong>
              <span>
                 
                <Popup
                  className="maxPointsIcon"
                  content="The total points don't match the maximum points for this week."
                  disabled={false}
                  eventsEnabled={true}
                  offset={0}
                  on={
                    Array [
                      "click",
                      "hover",
                    ]
                  }
                  pinned={false}
                  position="top left"
                  trigger={
                    <Icon
                      as="i"
                      color="red"
                      name="delete"
                      size="large"
                    />
                  }
                />
              </span>
            </p>
          </CardContent>
          <CardContent>
            <p
              className="maxPointsForWeek"
            >
              Maximum points for this review:
               
              <strong>
                <Points
                  points={3}
                />
              </strong>
            </p>
          </CardContent>
        </Card>
        <div>
          <Label>
            Define maximum points yourself
          </Label>
          <Input
            className="maxPointsInput"
            onChange={[Function]}
            step="0.01"
            style={
              Object {
                "width": "100px",
              }
            }
            type="number"
            value=""
          />
          <Popup
            className="infoText"
            content="The points you define here will be the maximum points for this review. If no value is given, the maximum points for this review 
                    will stay the same as the defaulted weekly points which is 3"
            disabled={false}
            eventsEnabled={true}
            offset={0}
            on={
              Array [
                "click",
                "hover",
              ]
            }
            pinned={false}
            position="top left"
            trigger={
              <Icon
                as="i"
                name="question circle"
              />
            }
          />
        </div>
        <form
          onSubmit={[Function]}
        >
          <Button
            as="button"
            className="saveButton"
            color="green"
            disabled={true}
            size="large"
            type="submit"
          >
            <div
              className="saveButtonText"
            >
              Save
            </div>
          </Button>
          <br />
          <br />
        </form>
      </div>
    </div>
  </div>
</Fragment>
`;
