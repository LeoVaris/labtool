diff a/labtool2.0/src/components/pages/ModifyCourseInstanceCodeReviews.js b/labtool2.0/src/components/pages/ModifyCourseInstanceCodeReviews.js	(rejected hunks)
@@ -237,6 +237,18 @@ export const ModifyCourseInstanceReview = props => {
-    Promise.all(Array.from(githubRepoSlugToStudent.keys()).map(repo => {
-      //Ignore nonexisting repos
-      return getGithubRepo(repo).result.then(result => result.data).catch(error => error.response && error.response.status === 404 ? Promise.resolve() : Promise.reject(error))
-    })).then(githubRepos => {
-      const studentInstances = githubRepos.filter(x => !!x).map(githubRepo => {
-        return { userId: githubRepoSlugToStudent.get(githubRepo.full_name).userId, issuesDisabled: !!githubRepo.has_issues }
+    Promise.all(
+      Array.from(githubRepoSlugToStudent.keys()).map(repo => {
+        //Ignore nonexisting repos
+        return getGithubRepo(repo)
+          .result.then(result => result.data)
+          .catch(error => (error.response && error.response.status === 404 ? Promise.resolve() : Promise.reject(error)))
+      })
+    )
+      .then(githubRepos => {
+        const studentInstances = githubRepos
+          .filter(x => !!x)
+          .map(githubRepo => {
+            return { userId: githubRepoSlugToStudent.get(githubRepo.full_name).userId, issuesDisabled: !!githubRepo.has_issues }
+          })
+        props.massUpdateStudentProjectInfo({ ohid: props.selectedInstance.ohid, studentInstances })
+      })
+      .catch(() => {
+        props.showNotification({ message: 'Failed to fetch data from GitHub API. Most likely you have exceeded GitHub API ratelimit or your Internet connection is down.', error: true })
